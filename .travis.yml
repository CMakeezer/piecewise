sudo: required

os:
  - linux
  - osx

language:
  - cpp

arch:
  #repos:
  packages:
    # pacman packages
    - meson
    - clang
    - ninja
    # aur packages
    - lcov
  script:
    # Install libc++
    - git clone https://aur.archlinux.org/libc++
    - cd libc++ && makepkg -sri --skippgpcheck --noconfirm && cd ..
    # C++14
    - CC=clang CXX=clang++ meson build/clang/cxx14/libstdcxx/sanitizer -Db_sanitize=address,undefined
    - ninja -vC build/clang/cxx14/libstdcxx/sanitizer test
    - CC=clang CXX=clang++ meson build/clang/cxx14/libstdcxx/release --buildtype=release
    - ninja -vC build/clang/cxx14/libstdcxx/release test
    - CC=clang CXX=clang++ meson build/clang/cxx14/libcxx/sanitizer -Db_sanitize=address,undefined -Dlibcxx=true
    - ninja -vC build/clang/cxx14/libcxx/sanitizer test
    - CC=clang CXX=clang++ meson build/clang/cxx14/libcxx/release --buildtype=release -Dlibcxx=true
    - ninja -vC build/clang/cxx14/libcxx/release test
    - CC=gcc CXX=g++ meson build/gcc/cxx14/libstdcxx/sanitizer -Db_sanitize=address,undefined
    - ninja -vC build/gcc/cxx14/libstdcxx/sanitizer test
    - CC=gcc CXX=g++ meson build/gcc/cxx14/libstdcxx/release --buildtype=release
    - ninja -vC build/gcc/cxx14/libstdcxx/release test

    # C++17
    # Disabled clang+libstdc++ due to clang bug:
    # https://bugs.llvm.org//show_bug.cgi?id=33222
    #- CC=clang CXX=clang++ meson build/clang/cxx17/libstdcxx/sanitizer -Dcpp_std=c++1z -Db_sanitize=address,undefined
    #- ninja -vC build/clang/cxx17/libstdcxx/sanitizer test
    #- CC=clang CXX=clang++ meson build/clang/cxx17/libstdcxx/release -Dcpp_std=c++1z --buildtype=release
    #- ninja -vC build/clang/cxx17/libstdcxx/release test
    - CC=clang CXX=clang++ meson build/clang/cxx17/libcxx/sanitizer -Dcpp_std=c++1z -Db_sanitize=address,undefined -Dlibcxx=true
    - ninja -vC build/clang/cxx17/libcxx/sanitizer test
    - CC=clang CXX=clang++ meson build/clang/cxx17/libcxx/release -Dcpp_std=c++1z --buildtype=release -Dlibcxx=true
    - ninja -vC build/clang/cxx17/libcxx/release test
    - CC=gcc CXX=g++ meson build/gcc/cxx17/libstdcxx/sanitizer -Dcpp_std=c++1z -Db_sanitize=address,undefined
    - ninja -vC build/gcc/cxx17/libstdcxx/sanitizer test
    - CC=gcc CXX=g++ meson build/gcc/cxx17/libstdcxx/release -Dcpp_std=c++1z --buildtype=release
    - ninja -vC build/gcc/cxx17/libstdcxx/release test

    # Generate a coverage report
    - CC=gcc CXX=g++ meson build/gcc/cxx17/libstdcxx/coverage -Dcpp_std=c++1z -Db_coverage=true
    - ninja -vC build/gcc/cxx17/libstdcxx/coverage test
    - ninja -C build/gcc/cxx17/libstdcxx/coverage coverage-html

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ninja python3; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pip3 install meson; fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then curl -s https://raw.githubusercontent.com/mikkeloscar/arch-travis/master/arch-travis.sh | bash; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then SDKROOT=$(xcodebuild -version -sdk macosx Path) mkdir build && meson build --buildtype=release && meson test -C build; fi

# Deploy coverage report to github pages
deploy:
  local_dir: $ARCH_TRAVIS_CHROOT/build/gcc/cxx17/libstdcxx/coverage/meson-logs/coveragereport/
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = linux
